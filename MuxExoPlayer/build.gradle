apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'checkstyle'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.mux.gradle.android.mux-android-distribution'

checkstyle {
  configFile = file("${rootDir}/.checkstyle/checkstyle.xml")
  configDirectory = file("${rootDir}/.checkstyle")
  toolVersion '8.42'
}

task checkstyle(type: Checkstyle) {
  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  // empty classpath
  classpath = files()
  showViolations = true
  ignoreFailures = false
}

preBuild.dependsOn('checkstyle')
assemble.dependsOn('lint')
check.dependsOn('checkstyle')

android {
  compileSdkVersion project.ext.compileSdkVersion
  defaultConfig {
    minSdkVersion project.ext.minSdkVersion
    targetSdkVersion project.ext.targetSdkVersion
    multiDexEnabled true
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    buildConfigField("String", "MUX_PLUGIN_NAME", "\"android-exoplayer-mux\"")
  }


  buildTypes {
    // Build types mainly control logging
    debug {
      minifyEnabled false
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    disable 'GradleCompatible'
    // exoplayer 2.8.1 workaround
    // https://github.com/google/ExoPlayer/issues/4234
    lintConfig file("../checker-framework-lint.xml")
  }

  flavorDimensions 'exoplayer', 'source'
  productFlavors {
    // Source Set with ExoPlayer bindings
    upto2_10 { dimension 'source' }
    just2_11 { dimension 'source' }
    from2_12to2_13 { dimension 'source' }
    just2_14 { dimension 'source' }
    just2_15 { dimension 'source' }
    just2_16 { dimension 'source' }
    just2_17 { dimension 'source' }
    from2_18toNow { dimension 'source' }
    // Exoplayer version for testing/variant matching
    r2_9_6 { dimension 'exoplayer' }
    r2_10_6 { dimension 'exoplayer' }
    r2_11_1 { dimension 'exoplayer' }
    r2_12_1 { dimension 'exoplayer' }
    r2_13_1 { dimension 'exoplayer' }
    r2_14_1 { dimension 'exoplayer' }
    r2_15_1 { dimension 'exoplayer' }
    r2_16_1 { dimension 'exoplayer' }
    amznPort { dimension 'exoplayer' }
    r2_17_1 { dimension 'exoplayer' }
    r2_18_1 { dimension 'exoplayer' }
  }
  // We only want the variants where the sourceSet and exoplayer version agree
  def realVariants = [
          "upto2_10"      : ["r2_9_6", "r2_10_6"],
          "just2_11"      : ["r2_11_1"],
          "from2_12to2_13": ["r2_12_1", "r2_13_1"],
          "just2_14"      : ["r2_14_1"],
          "just2_15"      : ["r2_15_1"],
          "just2_16"      : ["r2_16_1", "amznPort"],
          "just2_17"      : ["r2_17_1"],
          "from2_18toNow" : ["r2_18_1"]
  ]
  variantFilter { variant ->
    def exoPlayerFlavor = variant.flavors.findAll { it.dimension == "exoplayer" }[0]
    def sourceFlavor = variant.flavors.findAll { it.dimension == "source" }[0]
    setIgnore(!(realVariants.get(sourceFlavor.name).contains(exoPlayerFlavor.name)))
  }
  sourceSets {
    upto2_10 {
      java.srcDirs += 'src/exo-analytics-listener-upto-2_11/java'
      java.srcDirs += 'src/exo-collector-upto-2_10/java'
      java.srcDirs += 'src/exo-analytics-upto-2_16/java'
      java.srcDirs += 'src/exo-error-upto-2_13/java'
      java.srcDirs += 'src/exo-event-upto-2_13/java'
      java.srcDirs += 'src/exo-player-upto-2_15/java'
    }
    just2_11 {
      java.srcDirs += 'src/exo-analytics-listener-upto-2_11/java'
      java.srcDirs += 'src/exo-collector-2_10-now/java'
      java.srcDirs += 'src/exo-analytics-upto-2_16/java'
      java.srcDirs += 'src/exo-error-upto-2_13/java'
      java.srcDirs += 'src/exo-event-upto-2_13/java'
      java.srcDirs += 'src/exo-player-upto-2_15/java'
    }
    from2_12to2_13 {
      java.srcDirs += 'src/exo-analytics-listener-2_11-2_13/java'
      java.srcDirs += 'src/exo-collector-2_10-now/java'
      java.srcDirs += 'src/exo-analytics-upto-2_16/java'
      java.srcDirs += 'src/exo-error-upto-2_13/java'
      java.srcDirs += 'src/exo-event-upto-2_13/java'
      java.srcDirs += 'src/exo-player-upto-2_15/java'
    }
    just2_14 {
      java.srcDirs += 'src/exo-analytics-listener-2_13-2_16/java'
      java.srcDirs += 'src/exo-collector-2_10-now/java'
      java.srcDirs += 'src/exo-analytics-upto-2_16/java'
      java.srcDirs += 'src/exo-error-just-2_14/java'
      java.srcDirs += 'src/exo-event-2_14-now/java'
      java.srcDirs += 'src/exo-player-upto-2_15/java'
    }
    just2_15 {
      java.srcDirs += 'src/exo-analytics-listener-2_13-2_16/java'
      java.srcDirs += 'src/exo-collector-2_10-now/java'
      java.srcDirs += 'src/exo-analytics-upto-2_16/java'
      java.srcDirs += 'src/exo-error-2_15-now/java'
      java.srcDirs += 'src/exo-event-2_14-now/java'
      java.srcDirs += 'src/exo-player-upto-2_15/java'
    }
    just2_16 {
      java.srcDirs += 'src/exo-analytics-listener-2_13-2_16/java'
      java.srcDirs += 'src/exo-collector-2_10-now/java'
      java.srcDirs += 'src/exo-analytics-2_16-now/java'
      java.srcDirs += 'src/exo-error-2_15-now/java'
      java.srcDirs += 'src/exo-player-2_16-now/java'
      // From 2.16 onward, we don't need exo-event
    }
    just2_17 {
      java.srcDirs += 'src/exo-analytics-listener-just-2_17/java'
      java.srcDirs += 'src/exo-collector-2_10-now/java'
      java.srcDirs += 'src/exo-analytics-2_16-now/java'
      java.srcDirs += 'src/exo-error-2_15-now/java'
      java.srcDirs += 'src/exo-player-2_16-now/java'
      // From 2.16 onward, we don't need exo-event
    }
    from2_18toNow {
      java.srcDirs += 'src/exo-analytics-listener-2_18-now/java'
      java.srcDirs += 'src/exo-collector-2_10-now/java'
      java.srcDirs += 'src/exo-analytics-2_16-now/java'
      java.srcDirs += 'src/exo-error-2_15-now/java'
      java.srcDirs += 'src/exo-player-2_16-now/java'
      // From 2.16 onward, we don't need exo-event
    }
  } // sourceSets

  compileOptions {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
} //android

muxDistribution {
  def buildKite = System.getenv("BUILDKITE_BRANCH") != null
  if (buildKite) {
    devVersion versionFromCommitHash('dev-', System.getenv("BUILDKITE_BRANCH"))
  } else {
    devVersion versionFromCommitHash('dev-')
  }
  releaseVersion versionFromHeadCommit()
  artifactIds artifactFromFlavorValue('exoplayer')
  groupIds just("com.mux.stats.sdk.muxstats")

  publishIf { !it.productFlavors*.name.contains("ads") && it.buildType.name.contains("release") }
  useArtifactory = true
}

dependencies {
  //noinspection GradleDynamicVersion,GradleDependency
  r2_9_6Implementation 'com.google.android.exoplayer:exoplayer:2.9.6'
  //noinspection GradleDynamicVersion,GradleDependency
  r2_10_6Implementation 'com.google.android.exoplayer:exoplayer:2.10.6'
  //noinspection GradleDynamicVersion,GradleDependency
  r2_11_1Implementation 'com.google.android.exoplayer:exoplayer:2.11.1'
  //noinspection GradleDynamicVersion,GradleDependency
  r2_12_1Implementation 'com.google.android.exoplayer:exoplayer:2.12.1'
  //noinspection GradleDynamicVersion,GradleDependency
  r2_13_1Implementation 'com.google.android.exoplayer:exoplayer:2.13.1'
  //noinspection GradleDynamicVersion,GradleDependency
  r2_14_1Implementation 'com.google.android.exoplayer:exoplayer:2.14.1'
  //noinspection GradleDynamicVersion,GradleDependency
  r2_15_1Implementation 'com.google.android.exoplayer:exoplayer:2.15.1'
  //noinspection GradleDynamicVersion,GradleDependency
  r2_16_1Implementation 'com.google.android.exoplayer:exoplayer:2.16.1'
  // Amazon's port doesn't delete any symbols (ever), so we only need one version
  //noinspection GradleDynamicVersion,GradleDependency
  amznPortImplementation "com.amazon.android:exoplayer:2.16.1"
  //noinspection GradleDynamicVersion,GradleDependency
  r2_17_1Implementation 'com.google.android.exoplayer:exoplayer:2.17.1'
  r2_18_1Implementation 'com.google.android.exoplayer:exoplayer:2.18.1'

  //noinspection GradleDynamicVersion,GradleDependency
  compileOnly 'com.google.ads.interactivemedia.v3:interactivemedia:3.9.0'
  //noinspection GradleDynamicVersion,GradleDependency
  compileOnly 'com.google.android.gms:play-services-ads:15.0.1'
  //noinspection GradleDynamicVersion,GradleDependency
  compileOnly 'com.google.android.gms:play-services-ads-identifier:15.0.1'

  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'
  api "com.mux:stats.muxcore:${project.ext.muxCoreVersion}"
}
