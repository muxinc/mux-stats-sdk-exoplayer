apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'checkstyle'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.mux.gradle.android.mux-android-distribution'

checkstyle {
  configFile = file("${rootDir}/.checkstyle/checkstyle.xml")
  configDirectory = file("${rootDir}/.checkstyle")
  toolVersion '8.42'
}

task checkstyle(type: Checkstyle) {
  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  // empty classpath
  classpath = files()
  showViolations = true
  ignoreFailures = false
}

preBuild.dependsOn('checkstyle')
assemble.dependsOn('lint')
check.dependsOn('checkstyle')

android {
  compileSdkVersion project.ext.compileSdkVersion
  defaultConfig {
    minSdkVersion project.ext.minSdkVersion
    targetSdkVersion project.ext.targetSdkVersion
    multiDexEnabled true
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    buildConfigField("String", "MUX_PLUGIN_NAME", "\"android-exoplayer-mux\"")
  }


  buildTypes {
    // Build types mostly control logging and (devex-improving) minification
    debug {
      minifyEnabled false
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  buildFeatures {
    buildConfig true
  }

  flavorDimensions 'exoplayer'

  productFlavors {
    r2_14_1 {
      dimension 'exoplayer'
      matchingFallbacks = ['just2_14']
    }
    r2_15_1 {
      dimension 'exoplayer'
      matchingFallbacks = ['just2_15']
    }
    r2_16_1 {
      dimension 'exoplayer'
      matchingFallbacks = ['just2_16']
    }
    amznPort {
      dimension 'exoplayer'
      matchingFallbacks = ['just_2_16']
    }
    r2_17_1 {
      dimension 'exoplayer'
      matchingFallbacks = ['just2_17']
    }
    r2_18_1 {
      dimension 'exoplayer'
      matchingFallbacks = ['from2_18toNow']
    }
    r2_19_1 {
      dimension 'exoplayer'
      matchingFallbacks = ['from2_18toNow']
    }
  } //productFlavors

  compileOptions {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
  lint {
    disable 'GradleCompatible'
    lintConfig file('../checker-framework-lint.xml')
  }
  namespace 'com.mux.stats.sdk.muxstats'
} //android

muxDistribution {
  devVersion versionFromCommitHash('dev-')
  releaseVersion versionFromTag()
  artifactIds artifactFromFlavorValue('exoplayer')
  groupIds just("com.mux.stats.sdk.muxstats")
  publishIf { it.containsIgnoreCase("release") }
  publicReleaseIf releaseOnTag()

  // TODO: This is kinda clumsy, packageJavadocs should be a function not a property probably
  packageJavadocs = releaseOnTag().call()
  artifactoryConfig {
    contextUrl = "https://muxinc.jfrog.io/artifactory/"
    releaseRepoKey = 'default-maven-release-local'
    devRepoKey = 'default-maven-local'
  }
}

dependencies {
  //noinspection GradleDynamicVersion,GradleDependency
  r2_14_1Api 'com.google.android.exoplayer:exoplayer:2.14.1'
  //noinspection GradleDynamicVersion,GradleDependency
  r2_15_1Api 'com.google.android.exoplayer:exoplayer:2.15.1'
  //noinspection GradleDynamicVersion,GradleDependency
  r2_16_1Api 'com.google.android.exoplayer:exoplayer:2.16.1'
  // Amazon's port doesn't delete any symbols (ever), so we only need one version
  //noinspection GradleDynamicVersion,GradleDependency
  amznPortApi "com.amazon.android:exoplayer:2.16.1"
  //noinspection GradleDynamicVersion,GradleDependency
  r2_17_1Api 'com.google.android.exoplayer:exoplayer:2.17.1'
  //noinspection GradleDynamicVersion,GradleDependency
  r2_18_1Api 'com.google.android.exoplayer:exoplayer:2.18.1'
  r2_18_1Api 'com.google.android.exoplayer:exoplayer:2.19.1'

  //noinspection GradleDynamicVersion,GradleDependency
  compileOnly 'com.google.ads.interactivemedia.v3:interactivemedia:3.29.0'
  //noinspection GradleDynamicVersion,GradleDependency
  compileOnly 'com.google.android.gms:play-services-ads:22.2.0'
  //noinspection GradleDynamicVersion,GradleDependency
  compileOnly 'com.google.android.gms:play-services-ads-identifier:18.0.1'

  debugImplementation project(':ExoPlayerAdapter')
  api "com.mux:stats.muxcore:${project.ext.muxCoreVersion}"
}

afterEvaluate {
  // Add dependency on ExoPlayerAdapter lib via mvn, which is also variant-aware
  //  We only want to add this to release builds, and it has to be the same variant to work.
  //  There's r2_18_1Api '..' and releaseApi '..', but no r2_18_1ReleaseApi '..'
  android.libraryVariants.findAll { it.buildType.name.contains("release") }
          .each { variant ->
            def depNotation =
                    "com.mux.stats.sdk.muxstats" +
                            ":ExoPlayerAdapter_${variant.productFlavors.get(0).name}" +
                            ":${project.version}"
            def sourceSet = variant.sourceSets.reverse()[0] // Last src set is most specific
            // would be the same as declaring eg, r2_18_1ReleaseApi
            project.dependencies.add(sourceSet.apiConfigurationName, depNotation)
          }
}
